PART
{
	name = VADULE
	module = Part
	author = Randazzo
	MODEL
	{
		model = KGEx/VanguardAstrodynamics/Engines/VXS01/model
		texture = model001 , KGEx/VanguardAstrodynamics/Engines/VXL45/model001
		texture = model002 , KGEx/VanguardAstrodynamics/Engines/VXL45/model002
		scale = 1,1,1
	}
	rescaleFactor = 1.0
	node_stack_top = 0.0, 0.03487, 0.0, 0.0, 1.0, 0.0, 0
	node_stack_bottom = 0.0, -0.37622, 0.0, 0.0, -1.0, 0.0, 0
	TechRequired = propulsionSystems
	entryCost = 5000
	cost = 900
	category = Engine
	subcategory = 0
	title = VX-S01 "Iota" (0.625m service, dual-mode)
	manufacturer = Vanguard Astrodynamics
	description = The VX-S01 is a breakthrough dual-mode engine capable of producing thrust via standard Liquid Fuel + Oxider combustion, or it can close off the fuel lines and run off exothermic Monopropellant exhaust at reduced power and efficiency. 
	attachRules = 1,0,1,0,0
	mass = 0.125
	// heatConductivity = 0.06 // half default
	skinInternalConductionMult = 4.0
	emissiveConstant = 0.8 // engine nozzles are good at radiating.
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 7
	breakingForce = 200
	breakingTorque = 200
	maxTemp = 2000 // = 3600
	bulkheadProfiles = size0
	EFFECTS
	{
		running_LFO
		{
			AUDIO
			{
				channel = Ship
				clip = sound_rocket_mini
				volume = 0.0 0.0
				volume = 1.0 1.0
				pitch = 0.0 0.75
				pitch = 1.0 1.0
				loop = true
			}
			MODEL_MULTI_PARTICLE
			{
				modelName = KGEx/VanguardAstrodynamics/Engines/FX/vadulefx1
				transformName = thrustTransform
				emission = 0.0 0.0
				emission = 0.05 0.05
				emission = 0.25 0.25
				emission = 1.0 1.0
				speed = 0.0 0.5
				speed = 1.0 1.0
				localPosition = 0, 0, -0.04
			}
		}
		running_mono
		{
			AUDIO
			{
				channel = Ship
				clip = sound_rocket_mini
				volume = 0.0 0.0
				volume = 0.05 0.6
				volume = 1.0 1.0
				pitch = 0.0 0.7
				pitch = 1.0 1.4
				loop = true
			}
			MODEL_MULTI_PARTICLE
			{
				modelName = KGEx/VanguardAstrodynamics/Engines/FX/vadulefx2
				transformName = thrustTransform
				emission = 0.0 0.0
				emission = 0.05 0.1
				emission = 0.075 0.25
				emission = 1.0 0.70
				speed = 0.0 0.5
				speed = 1.0 1.0
				localPosition = 0, 0, -0.1
			}
		}
		engage
		{
			AUDIO
			{
				channel = Ship
				clip = sound_vent_soft
				volume = 1.0
				pitch = 2.0
				loop = false
			}
		}
		flameout
		{
			PREFAB_PARTICLE
			{
				prefabName = fx_exhaustSparks_flameout_2
				transformName = thrustTransform
				oneShot = true
			}
			AUDIO
			{
				channel = Ship
				clip = sound_explosion_low
				volume = 1.0
				pitch = 2.0
				loop = false
			}
		}
	}
	MODULE
	{
		name = MultiModeEngine
		primaryEngineID = LFO
		secondaryEngineID = Monopropellant
	}
	MODULE
	{
		name = ModuleEnginesFX
		engineID = LFO
		runningEffectName = running_LFO
		thrustVectorTransformName = thrustTransform
		exhaustDamage = True
		ignitionThreshold = 0.1
		minThrust = 0
		maxThrust = 20
		heatProduction = 90
		fxOffset = 0, 0, 0.125
		EngineType = LiquidFuel
		PROPELLANT
		{
			name = LiquidFuel
			ratio = 0.9
			DrawGauge = True
		}
		PROPELLANT
		{
			name = Oxidizer
			ratio = 1.1
		}
		atmosphereCurve
		{
			key = 0 330
			key = 1 275
			key = 2 0.001
		}
	}
	MODULE
	{
		name = ModuleEnginesFX
		engineID = Monopropellant
		runningEffectName = running_mono
		thrustVectorTransformName = thrustTransform
		exhaustDamage = True
		ignitionThreshold = 0.1
		minThrust = 0
		maxThrust = 18
		heatProduction = 40
		fxOffset = 0, 0, 0.125
		EngineType = MonoProp
		PROPELLANT
		{
			name = MonoPropellant
			ratio = 0.9
			DrawGauge = True
		}
		atmosphereCurve
		{
			key = 0 290
			key = 1 140
			key = 2 0.001
		}
	}
	MODULE
	{
		name = ModuleJettison
		jettisonName = fairing
		bottomNodeName = bottom
		isFairing = True
		jettisonedObjectMass = 0.1
		jettisonForce = 2
		jettisonDirection = 0 0 1
	}
	MODULE
	{
		name = FXModuleAnimateThrottle
		animationName = vaduleheat
		responseSpeed = 0.001
		dependOnEngineState = True
		dependOnThrottle = True
		preferMultiMode = True // bind to the parent multimode module, not the actual engines.
	}
	MODULE
	{
		name = ModuleGimbal
		gimbalTransformName = nozzle
		gimbalRange = 3
	}
	MODULE
	{
		name = ModuleTestSubject
		useStaging = True
		useEvent = True
		situationMask = 127
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 8000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 2000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 4000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = GT
			value = 0 // this just registers altitude as something to care about
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 300000
			situationMask = 16
			body = _NotSun
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 600000
			situationMask = 32
			body = _NotSun
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 0
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 600
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 300
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 1200
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 600
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 2500
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 200
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 100
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 100
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 50
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 50
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 20
			prestige = Exceptional
		}
	}
}
